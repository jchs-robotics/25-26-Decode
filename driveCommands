package org.firstinspires.ftc.teamcode.components.commands;

import com.arcrobotics.ftclib.command.CommandBase;
import com.arcrobotics.ftclib.controller.PIDController;
import org.firstinspires.ftc.teamcode.components.subsystems.DriveSubsystem;
import org.firstinspires.ftc.teamcode.Constants;

public class driveCommands extends CommandBase {

    private final DriveSubsystem m_subsystem;
    private final PIDController pidController;
    private final double point;

    public driveCommands(DriveSubsystem subsystem, double setpoint) {
        this.m_subsystem = subsystem;
        this.pidController = new PIDController(
                Constants.DrivePID.kP,
                Constants.DrivePID.kI,
                Constants.DrivePID.kD
        );
        pidController.setSetPoint(setpoint);
        this.point = setpoint;
        addRequirements(subsystem);
    }

    @Override
    public void initialize() {
        pidController.reset();
    }

    @Override
    public void execute() {
        double speed = pidController.calculate(m_subsystem.FLEncoder);
        m_subsystem.Drive(speed, speed, speed, speed);
    }

    @Override
    public void end(boolean interrupted) {
        m_subsystem.stop();
    }

    @Override
    public boolean isFinished() {
        return m_subsystem.tolerance(point);
    }
}
